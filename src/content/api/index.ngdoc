@ngdoc overview
@name API Reference
@description

# Entersoft AngularJS Web API

Please refer to [Entersoft AngularJS Complete Guide](http://developer.entersoft.gr/eswebapi/#/api/es.Services.Web.esWebApi)

**Version 1.17.4**
- esWebService: New function [downloadAssetURL](http://developer.entersoft.gr/eswebapi/#/api/es.Services.Web.esWebApi#methods_downloadasseturl) to get a download URL for an EAS Asset.
- esWebService: New function [downloadES00BlobURLByGID](http://developer.entersoft.gr/eswebapi/#/api/es.Services.Web.esWebApi#methods_downloades00bloburlbygid) to get the byte array buffer of the contents of the ES00Blob identified by the GID.
- esWebService: New function [downloadURLForBlobDataDownload](http://developer.entersoft.gr/eswebapi/#/api/es.Services.Web.esWebApi#methods_downloadurlforblobdatadownload) to get the url in order to download the contents of the ES00Blob as being a file.
- eswebService: Bug fuxing in execScrollerCommand (the web api url wan not formed properly).
- eswebService: Bug fuxing in fetchES00DocumentBlobDataByGID whan base64 was set to false.
- esGlobals: New function [esSupportedLanguages](http://developer.entersoft.gr/eswebapi/#/api/es.Services.Web.esGlobals#methods_essupportedlanguages)
- esGlobals: New function [suggestESLanguageID](http://developer.entersoft.gr/eswebapi/#/api/es.Services.Web.esGlobals#methods_suggesteslanguageid)
- esGlobals: New function [esDetectMobileBrowsers](http://developer.entersoft.gr/eswebapi/#/api/es.Services.Web.esGlobals#methods_esdetectmobilebrowsers)
- directive esLogin: Bug fix on language selection
- directive esGrid: The attributes esSrvPaging and esAutoExecute have been removed and replaced by a richer and more functional attribute esPQOptions that incorporates both removed attributes as field members.
- directive esMapPq: New attribute esPanelOpen of type boolean. The Params Panel will be expanded i.e. opened or not depending on the resolved value of the attribute.
- All alert dialogs that have been for debugging purposes have been removed from the client side javascripts.


# Roadmap
Entersoft SA **has been always committed to provide all the means** for 3rd party integrations, customizations, extensions and add-ins to the Entersoft Application Server and Entersoft Rich Client systems in the Microsoft .NET ecosystem. Since the very first release of Entersoft Business Suite 1.0, Entersoft SA has made publicly available all the Entersoft .NET Libraries (assemblies) so that any developer can use and reference in order to connect to 
the Entersoft Application Server and get access to almost all the services and methods Entersoft's core developers have access to.

As technology has been moving towards the Web and the Mobile, Entersoft SA has been investing in applications and solutions that not only take advantage of the state-of-the-art technology advancements but also leverage our customer's investment on Entersoft Technologies and provide them with applications to address their current and future needs. Entersoft e-Commerce v1 (based on Microsoft ASP.NET) and the forthcoming Entersoft e-Commerce v2 (based on Microsoft MVC 5 and ASP.NET vNext) are Entersoft's flagship offerings in the area of Web and e-Commerce. 

Entersoft Merchandising for iOS, Entersoft SFA for iOS, Entersoft Field Service for iOS, Entersoft Request For Approval for iOS, Android and Windows Phone, Entersoft MIS 360 for iOs, Windows 10, Android and Windows Phone 8 form Entersoft's product portfolio of **_true Native Apps_** for the mobile workers of any enterprise.

As Entersoft's Reserach and Development moves towards new products, solutions, platforms, development tools and technologies, so does the need for more API's so that 3rd party integration, customization, extension and interoperability can take place in theese platforms and applications. For a long period of time, Microsoft .NET Framework and Microsoft Windows were the center around which Entersoft ecosystem has been orbiting. For this ecosystem, Entersoft .NET API Managed Assemblies have been developed and made publicly available long time ago.

In the annual Entersoft Developer Conference in 2015 we announced Entersoft's R&D strategy and roadmap that we have been working on in order to address the **new** and the **diversity** of the technology environment that we all live, work and collaborate with in the context of **APIs**.
![EDC 2015](images/api/es01api-intro.png)

Now, .NET Framework running in other Operating Systems apart from Windows, such as Linux, Mac OSx, Android and most important **iOS** and other development platforms avaialbe apart from Visual Studio such as Xamarin and Mono.For these ecosystems a new approach is necessary based on _Portable Class Libraries (PCL)_. **Entersoft Portable Class Library SDK** is a totally new library built from the scratch and enables the same degree of capabilities for intergation, customization, extensibility and interoperability as the core managed .NET Entersoft API, and can be used within any programming environment, operating system and device that supports PCL.

![ES Rodmap](images/api/es02api-intro.png)

Furthermore, in the area of Web platforms, Entersoft SA is proud to announce the release of the **Entersoft WEB API Server**, and the **Entersoft WEB API libraries**. Entersoft WEB API is the means through which any javascript or http enabled platform, service or solution can have real-time, on-line access to the Entersoft Application Server services and methods. Through this API, Entersoft back-end services and operations are extended and made available to almost any ecosystem of programming environments, platforms, operating systems, SAAS Services, Cloud Applications and Services, etc. with the only prerequisite to be able to call typical HTTP(S) requests.

There is no limit in things you can do integrate with the Entersoft Application Server, in environments other than Microsoft such as PHP, Ruby, Node.js, Angular, JQuery, Javascript frameworks, Java, etc. Furthermore, services and applications such as Microsoft PowerBI, Azure Machine Learning, etc. can be easily integrated with an Entersoft Application Server through a solid, coherent and state-of-the art API such as the Entersoft WEB API. The same applies for the Mobile ecosystem, where no matter what the programming ennironment is Objective-C, Java, Xamarin, C#, F#, Visual Studio 2015, Windows Universal Apps you can select the most applicable Entersoft API flavor and exploit services anf functions of the Entersoft Application Server back-end with a minor effort.

# Case Studies
There is no better evidence and test for an API than the use of the API for the development of new applications and services. It is worth mentioning that Entersoft API Client SDKs have been used and tested in the development of the following Entersoft Applications:
* **Entersoft Request For Approval - Web**, an AngularJS based Web Application developed by Entersoft SA to address the need of a Request & Approve processes that we so often encounter in enterprises and companies of any size. The Web edition of this application is using the Entersoft AngularJS API library.
![Entersoft Request For Approval - Web](images/api/es05api-intro.png)
_Entersoft Request For Approval - Web -1_

![Entersoft Request For Approval - Web](images/api/es06api-intro.png)
_Entersoft Request For Approval - Web -2_

* **Entersoft Request For Approval - iOS, Android, WP** True Native Mobile Applications for the specific platforms and devices with more features and services than the Web edition such as: Push Notifications, SMS, eMail, Reminders and Notes. The application has been developed on Xamarin.Forms along with Entersoft PCL API client SDK.
![Entersoft Request For Approval - iOS](images/api/es07api-intro.png)
![Entersoft Request For Approval - iOS](images/api/es08api-intro.png)

* **Entersoft Knwoledge Base** that soon will be publicly available, that is based on Entersoft AngularJS API, AngularJS and ElasticSearch integration with Entersoft Business Suite.
![Entersoft Knowledge Base](images/api/es03api-intro.png)
_Entersoft Knowledge Base -1_

![Entersoft Knowledge Base](images/api/es04api-intro.png)
_Entersoft Knowledge Base -2_

As the use of the Entersoft API's is increasing day-by-day, more applications, case studies and solutions will be relying on the Entersoft APIs and will be listed in a special Case Study Section, so that we can all extend our knowledge and push our potentials.

# Remarks
Depending on the programming environment of the client software that needs access to the Entersoft Application Server there are different libraries that can be used. See the table below:

 Environment | Entersoft API Client | Repository | Examples
--- | --- | --- | --- |
.NET Framework Native Apps on Windows Platforms | Entersoft Bridge Session | {@link https://www.nuget.org/packages/Entersoft.ERPBridge ERPBridge}| Any native .NET application – Windows Forms, WPF, WCF, WF, ASP.NET, etc. DLL or EXE 
Portable Class Library enabled environments  | Entersoft PCL Client Session | {@link https://www.nuget.org/packages/Entersoft.Web.Client/ .NET PCL} | Xamarin iOS, Xamarin Android, Xamarin WP, Xamarin Forms, Mono Linux projects 
JavaScript, NodeJS, WEB Front-end development | Entersoft WEB API Client | {@link https://github.com/entersoftsa/eswebapi ESWebApi} | JQuery, AngularJS, NodeJS, JavaScript frameworks, etc.

This document focus on the JavaScript and the Entersoft WEB API Client framework (EWAPIC). However, most of the document is applicable to the PCL Library environments and the Entersoft PCL Client Session as it is symmetric to the WEB API and requires – assumes the same architecture.